-- RAFEEYL Auto Teleport (dengan Save Summit Permanen)

local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local HttpService = game:GetService("HttpService")

local saveFile = "Rafeeyl_Waypoints.json" -- nama file penyimpanan
local waypoints = {}
local running = false
local autoRespawn = false
local delaySeconds = 5
local loopCoroutine

-- 🧩 Load data waypoint yang tersimpan (kalau ada)
if isfile and readfile and isfile(saveFile) then
    local ok, data = pcall(function()
        return HttpService:JSONDecode(readfile(saveFile))
    end)
    if ok and type(data) == "table" then
        waypoints = data
        warn("[RAFEEYL] Waypoint permanen berhasil dimuat! Total:", #waypoints)
    else
        warn("[RAFEEYL] Gagal membaca data waypoint.")
    end
end

-- Helper
local function getHRP()
    local c = player.Character
    if not c then return nil end
    return c:FindFirstChild("HumanoidRootPart")
end

local function teleportTo(pos)
    local hrp = getHRP()
    if hrp then
        hrp.CFrame = CFrame.new(pos + Vector3.new(0,3,0))
    end
end

local function saveWaypoints()
    if writefile and HttpService then
        writefile(saveFile, HttpService:JSONEncode(waypoints))
    end
end

local function waitForAlive()
    while true do
        local c = player.Character
        local humanoid = c and c:FindFirstChildOfClass("Humanoid")
        if humanoid and humanoid.Health > 0 then return end
        if not autoRespawn then
            running = false
            return
        end
        repeat task.wait(0.5) until player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character:FindFirstChildOfClass("Humanoid").Health > 0
        return
    end
end

local function startLoop()
    if running or #waypoints == 0 then
        Rayfield:Notify({
            Title = "Gagal Start",
            Content = "Tidak ada waypoint tersimpan!",
            Duration = 2
        })
        return
    end
    running = true
    loopCoroutine = coroutine.create(function()
        local idx = 1
        while running do
            if not getHRP() then
                if autoRespawn then
                    waitForAlive()
                else
                    running = false
                    break
                end
            end
            teleportTo(waypoints[idx])
            idx = idx + 1
            if idx > #waypoints then idx = 1 end
            local t = 0
            while t < delaySeconds and running do
                task.wait(0.2)
                t += 0.2
            end
        end
    end)
    coroutine.resume(loopCoroutine)
end

local function stopLoop()
    running = false
end

-- GUI Rayfield
local Window = Rayfield:CreateWindow({
   Name = "RAFEEYL - Auto Teleport",
   LoadingTitle = "RAFEEYL",
   LoadingSubtitle = "by Rafeeyl",
   ConfigurationSaving = {Enabled = false}
})

local Tab = Window:CreateTab("Teleport", 4483362458)

Tab:CreateButton({
   Name = "SAVE",
   Callback = function()
      local hrp = getHRP()
      if hrp then
          table.insert(waypoints, hrp.Position)
          saveWaypoints() -- simpan ke file permanen
          Rayfield:Notify({
              Title = "Saved!",
              Content = "Waypoint ditambahkan dan disimpan permanen. Total: "..#waypoints,
              Duration = 2
          })
      end
   end
})

Tab:CreateButton({
   Name = "Start",
   Callback = function()
      startLoop()
      Rayfield:Notify({Title="Started", Content="Auto Teleport ON", Duration=2})
   end
})

Tab:CreateButton({
   Name = "⏹ Stop",
   Callback = function()
      stopLoop()
      Rayfield:Notify({Title="Stopped", Content="Auto Teleport OFF", Duration=2})
   end
})

Tab:CreateButton({
   Name = "🗑 Reset Saved Waypoints",
   Callback = function()
      waypoints = {}
      if isfile and delfile and isfile(saveFile) then
          delfile(saveFile)
      end
      Rayfield:Notify({
         Title="Reset Done",
         Content="Semua waypoint permanen dihapus.",
         Duration=2
      })
   end
})

Tab:CreateToggle({
   Name = "Auto Respawn",
   CurrentValue = false,
   Flag = "AutoRespawn",
   Callback = function(Value)
      autoRespawn = Value
   end
})

Tab:CreateSlider({
   Name = "Delay (seconds)",
   Range = {2, 60},
   Increment = 1,
   Suffix = "s",
   CurrentValue = 5,
   Flag = "DelaySlider",
   Callback = function(Value)
      delaySeconds = Value
   end
})
