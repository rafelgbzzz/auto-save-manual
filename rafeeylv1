local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\244\11","\108\218\37\200\213\188"),function(v42) if (v9(v42,5 -3 )==81) then local v94=0;while true do if (v94==0) then v30=v8(v11(v42,1,2 -1 ));return "";end end else local v95=0;local v96;while true do if (0==v95) then v96=v10(v8(v42,30 -14 ));if v30 then local v120=0;local v121;while true do if (v120==0) then v121=v13(v96,v30);v30=nil;v120=1;end if (v120==1) then return v121;end end else return v96;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v97=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v97-(v97%1) ;else local v98=2^(v44-1) ;return (((v43%(v98 + v98))>=v98) and 1) or (0 -0) ;end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (1==v48) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (1==v51) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==3) then if (v61==0) then if (v60==(931 -(857 + 74))) then return v62 * 0 ;else local v122=0;while true do if (v122==0) then v61=1;v59=0;break;end end end elseif (v61==2047) then return ((v60==0) and (v62 * ((569 -(367 + 201))/0))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^(979 -(214 + 713))))) ;end if (1==v56) then v59=1;v60=(v31(v58,1,20) * (2^32)) + v57 ;v56=2;end if (v56==2) then v61=v31(v58,640 -(555 + 64) ,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end if (0==v56) then v57=v34();v58=v34();v56=1;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (v64==0) then v65=nil;if  not v63 then local v117=0;while true do if (v117==0) then v63=v34();if (v63==(0 + 0)) then return "";end break;end end end v64=1;end if (v64==2) then v66={};for v102=1, #v65 do v66[v102]=v10(v9(v11(v65,v102,v102)));end v64=3;end if (v64==1) then v65=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;v64=2;end if (v64==3) then return v14(v66);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67=0;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (v67==2) then for v104=1,v34() do local v105=0;local v106;while true do if (v105==0) then v106=v32();if (v31(v106,1,1 + 0 )==0) then local v124=0;local v125;local v126;local v127;while true do if (v124==3) then if (v31(v126,3,3)==1) then v127[4]=v73[v127[4]];end v68[v104]=v127;break;end if (v124==0) then v125=v31(v106,2,3);v126=v31(v106,4,6);v124=1;end if (v124==2) then if (v31(v126,1,1)==(1638 -(1523 + 114))) then v127[2]=v73[v127[2 + 0 ]];end if (v31(v126,2,2 -0 )==1) then v127[3]=v73[v127[3]];end v124=3;end if (v124==1) then v127={v33(),v33(),nil,nil};if (v125==0) then local v135=0;while true do if (v135==0) then v127[3]=v33();v127[4]=v33();break;end end elseif (v125==1) then v127[3]=v34();elseif (v125==2) then v127[3]=v34() -(2^16) ;elseif (v125==3) then local v368=0;while true do if (v368==0) then v127[3]=v34() -(2^16) ;v127[881 -(282 + 595) ]=v33();break;end end end v124=2;end end end break;end end end for v107=1,v34() do v69[v107-1 ]=v39();end return v71;end if (v67==1) then v72=v34();v73={};for v109=1,v72 do local v110=0;local v111;local v112;while true do if (v110==1) then if (v111==1) then v112=v32()~=0 ;elseif (v111==2) then v112=v35();elseif (v111==3) then v112=v36();end v73[v109]=v112;break;end if (0==v110) then v111=v32();v112=nil;v110=1;end end end v71[3]=v32();v67=2;end if (v67==0) then v68={};v69={};v70={};v71={v68,v69,nil,v70};v67=1;end end end local function v40(v74,v75,v76) local v77=v74[1];local v78=v74[2];local v79=v74[3];return function(...) local v80=v77;local v81=v78;local v82=v79;local v83=v38;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -(1066 -(68 + 997)) ;local v89={};local v90={};for v99=0,v88 do if (v99>=v82) then v86[v99-v82 ]=v87[v99 + 1 ];else v90[v99]=v87[v99 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do local v100=0;while true do if (v100==0) then v92=v80[v84];v93=v92[1];v100=1;end if (v100==1) then if (v93<=61) then if (v93<=30) then if (v93<=14) then if (v93<=6) then if (v93<=2) then if (v93<=0) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>1) then v90[v92[2]]=v90[v92[3]] -v90[v92[4]] ;else v90[v92[2]]=v90[v92[3]] * v90[v92[4]] ;end elseif (v93<=4) then if (v93>3) then local v148=0;local v149;while true do if (v148==0) then v149=v92[2];v90[v149]=v90[v149](v21(v90,v149 + 1 ,v85));break;end end else v90[v92[1272 -(226 + 1044) ]]=v90[v92[3]]%v92[4] ;end elseif (v93>(21 -16)) then v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;else local v152=0;local v153;while true do if (v152==0) then v153=v92[119 -(32 + 85) ];v90[v153]=v90[v153](v21(v90,v153 + 1 ,v92[3]));break;end end end elseif (v93<=10) then if (v93<=8) then if (v93>7) then v90[v92[2]]=v92[3]~=0 ;else local v155=0;local v156;local v157;while true do if (v155==0) then v156=v92[2];v157={};v155=1;end if (v155==1) then for v481=1, #v89 do local v482=0;local v483;while true do if (0==v482) then v483=v89[v481];for v580=0, #v483 do local v581=v483[v580];local v582=v581[1];local v583=v581[2];if ((v582==v90) and (v583>=v156)) then local v593=0;while true do if (0==v593) then v157[v583]=v582[v583];v581[1]=v157;break;end end end end break;end end end break;end end end elseif (v93>9) then local v158=v92[2];local v159,v160=v83(v90[v158](v21(v90,v158 + 1 ,v85)));v85=(v160 + v158) -1 ;local v161=0;for v369=v158,v85 do local v370=0;while true do if (0==v370) then v161=v161 + 1 ;v90[v369]=v159[v161];break;end end end else v90[v92[2]]=v90[v92[3]] + v92[4 + 0 ] ;end elseif (v93<=12) then if (v93>11) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v163=0;local v164;while true do if (v163==0) then v164=v92[2];v90[v164](v90[v164 + 1 ]);break;end end end elseif (v93>13) then local v165=v92[1 + 1 ];local v166=v92[4];local v167=v165 + 2 ;local v168={v90[v165](v90[v165 + 1 ],v90[v167])};for v371=1,v166 do v90[v167 + v371 ]=v168[v371];end local v169=v168[1];if v169 then local v393=0;while true do if (v393==0) then v90[v167]=v169;v84=v92[3];break;end end else v84=v84 + 1 ;end else v90[v92[959 -(892 + 65) ]]=v90[v92[3]];end elseif (v93<=22) then if (v93<=18) then if (v93<=16) then if (v93==15) then v90[v92[2]]=v40(v81[v92[3]],nil,v76);elseif (v92[2]==v90[v92[9 -5 ]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==17) then local v173=v92[2];local v174=v90[v173 + 2 ];local v175=v90[v173] + v174 ;v90[v173]=v175;if (v174>0) then if (v175<=v90[v173 + 1 ]) then local v486=0;while true do if (v486==0) then v84=v92[3];v90[v173 + 3 ]=v175;break;end end end elseif (v175>=v90[v173 + 1 ]) then v84=v92[3];v90[v173 + 3 ]=v175;end else local v177=0;local v178;while true do if (v177==0) then v178=v92[3 -1 ];v90[v178]=v90[v178]();break;end end end elseif (v93<=20) then if (v93==19) then local v179=v92[2];local v180,v181=v83(v90[v179](v21(v90,v179 + 1 ,v85)));v85=(v181 + v179) -1 ;local v182=0;for v374=v179,v85 do v182=v182 + 1 ;v90[v374]=v180[v182];end else v90[v92[3 -1 ]]=v90[v92[3]] * v90[v92[4]] ;end elseif (v93>(371 -(87 + 263))) then local v184=0;local v185;local v186;local v187;while true do if (v184==0) then v185=v92[2];v186={v90[v185](v21(v90,v185 + 1 ,v85))};v184=1;end if (v184==1) then v187=180 -(67 + 113) ;for v489=v185,v92[4] do v187=v187 + 1 ;v90[v489]=v186[v187];end break;end end else local v188=0;local v189;while true do if (v188==0) then v189=v92[2];v90[v189]=v90[v189]();break;end end end elseif (v93<=26) then if (v93<=24) then if (v93==23) then v90[v92[2]]= #v90[v92[3]];else local v191=0;local v192;while true do if (v191==0) then v192=v92[2];do return v90[v192],v90[v192 + 1 + 0 ];end break;end end end elseif (v93==25) then local v193=0;local v194;local v195;local v196;while true do if (v193==0) then v194=v92[2];v195={v90[v194](v21(v90,v194 + 1 ,v92[3]))};v193=1;end if (1==v193) then v196=0;for v492=v194,v92[4] do local v493=0;while true do if (v493==0) then v196=v196 + 1 ;v90[v492]=v195[v196];break;end end end break;end end else v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;end elseif (v93<=28) then if (v93>27) then local v198=0;local v199;local v200;while true do if (v198==0) then v199=v92[2];v200=v90[v199];v198=1;end if (v198==1) then for v494=v199 + 1 ,v85 do v15(v200,v90[v494]);end break;end end else local v201=0;local v202;local v203;local v204;while true do if (v201==1) then v204=v90[v202 + 2 + 0 ];if (v204>0) then if (v203>v90[v202 + 1 ]) then v84=v92[3];else v90[v202 + 3 ]=v203;end elseif (v203<v90[v202 + 1 ]) then v84=v92[3];else v90[v202 + 3 ]=v203;end break;end if (v201==0) then v202=v92[2];v203=v90[v202];v201=1;end end end elseif (v93>29) then v90[v92[2]]=v90[v92[3]][v92[4]];else v90[v92[7 -5 ]]=v90[v92[3]];end elseif (v93<=45) then if (v93<=37) then if (v93<=(985 -(802 + 150))) then if (v93<=31) then local v139=0;local v140;local v141;local v142;local v143;while true do if (v139==2) then for v395=v140,v85 do v143=v143 + 1 ;v90[v395]=v141[v143];end break;end if (v139==0) then v140=v92[2];v141,v142=v83(v90[v140](v21(v90,v140 + 1 ,v92[3])));v139=1;end if (v139==1) then v85=(v142 + v140) -(2 -1) ;v143=0;v139=2;end end elseif (v93>32) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else local v209=v92[2];do return v90[v209](v21(v90,v209 + 1 ,v92[3]));end end elseif (v93<=35) then if (v93==(61 -27)) then v90[v92[2]][v92[3 + 0 ]]=v90[v92[4]];else local v212=v92[2];local v213,v214=v83(v90[v212](v90[v212 + 1 ]));v85=(v214 + v212) -1 ;local v215=0;for v378=v212,v85 do local v379=0;while true do if (v379==0) then v215=v215 + 1 ;v90[v378]=v213[v215];break;end end end end elseif (v93==36) then local v216=0;local v217;while true do if (v216==0) then v217=v92[2];v90[v217]=v90[v217](v90[v217 + 1 ]);break;end end else local v218=v92[2];do return v90[v218](v21(v90,v218 + 1 ,v92[3]));end end elseif (v93<=41) then if (v93<=39) then if (v93==38) then v90[v92[2]][v90[v92[3]]]=v92[1001 -(915 + 82) ];elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>40) then v90[v92[2]]=v76[v92[3]];else v90[v92[2]][v92[8 -5 ]]=v90[v92[4]];end elseif (v93<=43) then if (v93>42) then if (v92[2 + 0 ]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3 -0 ];end else local v225=0;local v226;while true do if (0==v225) then v226=v92[1189 -(1069 + 118) ];v90[v226](v21(v90,v226 + 1 ,v85));break;end end end elseif (v93==(99 -55)) then v90[v92[2]]=v92[3] + v90[v92[4]] ;else v76[v92[6 -3 ]]=v90[v92[1 + 1 ]];end elseif (v93<=53) then if (v93<=49) then if (v93<=47) then if (v93==46) then local v230=0;local v231;local v232;local v233;while true do if (1==v230) then v233=0;for v497=v231,v92[4] do local v498=0;while true do if (v498==0) then v233=v233 + 1 ;v90[v497]=v232[v233];break;end end end break;end if (0==v230) then v231=v92[2];v232={v90[v231](v21(v90,v231 + 1 ,v92[3]))};v230=1;end end else local v234=0;local v235;local v236;while true do if (v234==1) then v90[v235 + 1 ]=v236;v90[v235]=v236[v92[4]];break;end if (v234==0) then v235=v92[2];v236=v90[v92[3]];v234=1;end end end elseif (v93==48) then v84=v92[3];else v90[v92[2]]=v90[v92[3]] + v90[v92[4]] ;end elseif (v93<=(90 -39)) then if (v93>50) then v90[v92[2]][v92[3]]=v92[4 + 0 ];else local v241=0;local v242;while true do if (v241==0) then v242=v92[2];v90[v242]=v90[v242](v90[v242 + 1 ]);break;end end end elseif (v93==52) then v90[v92[2]]=v40(v81[v92[3]],nil,v76);else local v244=0;local v245;local v246;while true do if (v244==0) then v245=v92[2];v246=v90[v92[794 -(368 + 423) ]];v244=1;end if (v244==1) then v90[v245 + 1 ]=v246;v90[v245]=v246[v92[4]];break;end end end elseif (v93<=57) then if (v93<=55) then if (v93==(169 -115)) then local v247=v92[20 -(10 + 8) ];v90[v247]=v90[v247](v21(v90,v247 + (3 -2) ,v85));else local v249=v92[2];local v250=v90[v249];local v251=v92[3];for v380=1,v251 do v250[v380]=v90[v249 + v380 ];end end elseif (v93==56) then v90[v92[2]]=v90[v92[3]]%v92[4] ;else local v253=0;local v254;local v255;local v256;while true do if (v253==1) then v256={};v255=v18({},{[v7("\76\61\118\69\10\196\147","\96\19\98\31\43\110\161\235")]=function(v499,v500) local v501=0;local v502;while true do if (0==v501) then v502=v256[v500];return v502[3 -2 ][v502[2]];end end end,[v7("\109\248\162\119\8\91\201\168\119\7","\127\50\167\204\18")]=function(v503,v504,v505) local v506=0;local v507;while true do if (0==v506) then v507=v256[v504];v507[1][v507[1 + 1 ]]=v505;break;end end end});v253=2;end if (v253==2) then for v508=1,v92[4] do local v509=0;local v510;while true do if (v509==0) then v84=v84 + 1 ;v510=v80[v84];v509=1;end if (v509==1) then if (v510[1 -0 ]==29) then v256[v508-1 ]={v90,v510[441 -(145 + 293) ]};else v256[v508-1 ]={v75,v510[3]};end v89[ #v89 + (431 -(44 + 386)) ]=v256;break;end end end v90[v92[2]]=v40(v254,v255,v76);break;end if (v253==0) then v254=v81[v92[445 -(416 + 26) ]];v255=nil;v253=1;end end end elseif (v93<=59) then if (v93>58) then local v257=v92[2];local v258,v259=v83(v90[v257](v90[v257 + 1 ]));v85=(v259 + v257) -1 ;local v260=0;for v383=v257,v85 do local v384=0;while true do if (v384==0) then v260=v260 + 1 ;v90[v383]=v258[v260];break;end end end else v90[v92[2]]=v90[v92[3]] + v90[v92[4]] ;end elseif (v93>60) then local v262=0;local v263;while true do if (0==v262) then v263=v92[2];do return v90[v263],v90[v263 + 1 ];end break;end end elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=92) then if (v93<=76) then if (v93<=68) then if (v93<=64) then if (v93<=62) then do return v90[v92[1488 -(998 + 488) ]];end elseif (v93>63) then local v264=0;local v265;local v266;local v267;local v268;while true do if (v264==1) then v85=(v267 + v265) -1 ;v268=0;v264=2;end if (v264==0) then v265=v92[2];v266,v267=v83(v90[v265](v21(v90,v265 + 1 ,v92[1 + 2 ])));v264=1;end if (v264==2) then for v513=v265,v85 do v268=v268 + 1 + 0 ;v90[v513]=v266[v268];end break;end end elseif (v92[2]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[775 -(201 + 571) ];end elseif (v93<=(1204 -(116 + 1022))) then if (v93==65) then local v269=0;local v270;local v271;local v272;while true do if (0==v269) then v270=v92[2];v271={v90[v270](v90[v270 + 1 ])};v269=1;end if (1==v269) then v272=0;for v516=v270,v92[4] do v272=v272 + (4 -3) ;v90[v516]=v271[v272];end break;end end else v90[v92[2]][v90[v92[3]]]=v90[v92[4]];end elseif (v93>67) then v90[v92[2]]=v92[3];else v90[v92[2 + 0 ]]=v90[v92[3]] -v90[v92[4]] ;end elseif (v93<=72) then if (v93<=70) then if (v93==69) then local v278=0;local v279;local v280;local v281;while true do if (v278==0) then v279=v92[2];v280={v90[v279](v21(v90,v279 + 1 ,v85))};v278=1;end if (v278==1) then v281=0;for v519=v279,v92[4] do v281=v281 + 1 ;v90[v519]=v280[v281];end break;end end else local v282=0;local v283;local v284;while true do if (v282==0) then v283=v92[2];v284=v90[v283];v282=1;end if (v282==1) then for v522=v283 + 1 ,v92[3] do v15(v284,v90[v522]);end break;end end end elseif (v93==71) then v76[v92[3]]=v90[v92[2]];else local v287=0;local v288;while true do if (0==v287) then v288=v92[2];v90[v288](v21(v90,v288 + (3 -2) ,v92[3]));break;end end end elseif (v93<=74) then if (v93>73) then v90[v92[2]]();else local v289=0;local v290;while true do if (v289==0) then v290=v92[2];do return v90[v290](v21(v90,v290 + 1 ,v85));end break;end end end elseif (v93==(934 -(814 + 45))) then v90[v92[2]]=v92[3]~=0 ;else local v292=0;local v293;local v294;while true do if (v292==1) then for v523=1, #v89 do local v524=0;local v525;while true do if (0==v524) then v525=v89[v523];for v584=0, #v525 do local v585=0;local v586;local v587;local v588;while true do if (v585==1) then v588=v586[2];if ((v587==v90) and (v588>=v293)) then local v604=0;while true do if (0==v604) then v294[v588]=v587[v588];v586[1]=v294;break;end end end break;end if (v585==0) then v586=v525[v584];v587=v586[1];v585=1;end end end break;end end end break;end if (v292==0) then v293=v92[2];v294={};v292=1;end end end elseif (v93<=84) then if (v93<=80) then if (v93<=78) then if (v93>77) then v75[v92[3]]=v90[v92[2]];else local v297=0;local v298;local v299;while true do if (v297==0) then v298=v92[3];v299=v90[v298];v297=1;end if (v297==1) then for v526=v298 + (2 -1) ,v92[4] do v299=v299   .. v90[v526] ;end v90[v92[2]]=v299;break;end end end elseif (v93==(5 + 74)) then v90[v92[2]]=v75[v92[3]];else v90[v92[2]]=v90[v92[3]][v92[4]];end elseif (v93<=82) then if (v93>81) then local v304=0;local v305;while true do if (v304==0) then v305=v92[2];v90[v305](v21(v90,v305 + 1 ,v92[3]));break;end end elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[2 + 1 ];end elseif (v93==83) then v90[v92[2]][v92[3]]=v92[4];else local v308=v92[2];local v309=v92[4];local v310=v308 + 2 ;local v311={v90[v308](v90[v308 + 1 ],v90[v310])};for v385=1,v309 do v90[v310 + v385 ]=v311[v385];end local v312=v311[1];if v312 then local v404=0;while true do if (v404==0) then v90[v310]=v312;v84=v92[3];break;end end else v84=v84 + 1 ;end end elseif (v93<=88) then if (v93<=86) then if (v93==85) then do return v90[v92[2]]();end else local v313=v92[2];do return v21(v90,v313,v313 + v92[3] );end end elseif (v93>87) then if (v90[v92[2]]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else local v314=0;local v315;while true do if (v314==0) then v315=v92[2];v90[v315]=v90[v315](v21(v90,v315 + 1 ,v92[3]));break;end end end elseif (v93<=90) then if (v93==89) then v90[v92[2]]={};elseif v90[v92[2]] then v84=v84 + (886 -(261 + 624)) ;else v84=v92[3];end elseif (v93>91) then v90[v92[2]]= #v90[v92[3]];else v90[v92[2]]=v92[3] + v90[v92[4]] ;end elseif (v93<=107) then if (v93<=99) then if (v93<=95) then if (v93<=93) then v90[v92[2]]();elseif (v93>94) then local v319=0;local v320;local v321;while true do if (v319==0) then v320=v92[3];v321=v90[v320];v319=1;end if (v319==1) then for v527=v320 + (1 -0) ,v92[4] do v321=v321   .. v90[v527] ;end v90[v92[2]]=v321;break;end end else v90[v92[2]]=v92[3];end elseif (v93<=97) then if (v93>96) then local v324=0;local v325;while true do if (v324==0) then v325=v92[1082 -(1020 + 60) ];do return v21(v90,v325,v85);end break;end end else local v326=v92[2];local v327=v90[v326];local v328=v90[v326 + 2 ];if (v328>0) then if (v327>v90[v326 + 1 ]) then v84=v92[3];else v90[v326 + (1426 -(630 + 793)) ]=v327;end elseif (v327<v90[v326 + 1 ]) then v84=v92[3];else v90[v326 + 3 ]=v327;end end elseif (v93==98) then for v388=v92[2],v92[9 -6 ] do v90[v388]=nil;end else v90[v92[2]]=v76[v92[3]];end elseif (v93<=103) then if (v93<=101) then if (v93>100) then local v331=0;local v332;local v333;local v334;while true do if (1==v331) then v334=0 -0 ;for v532=v332,v92[4] do local v533=0;while true do if (v533==0) then v334=v334 + 1 ;v90[v532]=v333[v334];break;end end end break;end if (v331==0) then v332=v92[2];v333={v90[v332](v90[v332 + 1 ])};v331=1;end end else do return;end end elseif (v93>102) then v90[v92[2]][v90[v92[3]]]=v92[4];elseif (v90[v92[2]]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[2 + 1 ];end elseif (v93<=105) then if (v93>104) then local v337=0;local v338;local v339;local v340;while true do if (v337==1) then v340={};v339=v18({},{[v7("\111\158\252\45\64\43\72","\78\48\193\149\67\36")]=function(v534,v535) local v536=0;local v537;while true do if (v536==0) then v537=v340[v535];return v537[3 -2 ][v537[2]];end end end,[v7("\15\33\142\29\86\57\16\132\29\89","\33\80\126\224\120")]=function(v538,v539,v540) local v541=0;local v542;while true do if (v541==0) then v542=v340[v539];v542[1][v542[2]]=v540;break;end end end});v337=2;end if (v337==0) then v338=v81[v92[3]];v339=nil;v337=1;end if (v337==2) then for v543=1,v92[4] do local v544=0;local v545;while true do if (v544==1) then if (v545[1]==29) then v340[v543-1 ]={v90,v545[3]};else v340[v543-1 ]={v75,v545[3]};end v89[ #v89 + 1 ]=v340;break;end if (v544==0) then v84=v84 + 1 ;v545=v80[v84];v544=1;end end end v90[v92[2]]=v40(v338,v339,v76);break;end end else local v341=0;local v342;local v343;while true do if (v341==1) then for v546=v342 + 1 ,v85 do v15(v343,v90[v546]);end break;end if (v341==0) then v342=v92[768 -(745 + 21) ];v343=v90[v342];v341=1;end end end elseif (v93==106) then v84=v92[3];else local v345=v92[2];do return v21(v90,v345,v85);end end elseif (v93<=115) then if (v93<=111) then if (v93<=109) then if (v93==108) then local v346=0;local v347;local v348;local v349;while true do if (v346==1) then v349=v92[3];for v547=1,v349 do v348[v547]=v90[v347 + v547 ];end break;end if (v346==0) then v347=v92[2];v348=v90[v347];v346=1;end end else do return v90[v92[2]]();end end elseif (v93==110) then v90[v92[1 + 1 ]][v90[v92[3]]]=v90[v92[4]];else v90[v92[2]]=v90[v92[7 -4 ]] + v92[15 -11 ] ;end elseif (v93<=113) then if (v93>112) then for v390=v92[2],v92[3] do v90[v390]=nil;end else local v353=0;local v354;while true do if (v353==0) then v354=v92[1 + 1 ];do return v90[v354](v21(v90,v354 + 1 ,v85));end break;end end end elseif (v93>114) then v75[v92[3]]=v90[v92[2]];elseif (v92[2]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=119) then if (v93<=117) then if (v93>116) then local v357=0;local v358;while true do if (v357==0) then v358=v92[2];v90[v358](v90[v358 + 1 ]);break;end end else local v359=0;local v360;local v361;local v362;while true do if (v359==2) then if (v361>0) then if (v362<=v90[v360 + 1 ]) then local v578=0;while true do if (v578==0) then v84=v92[3];v90[v360 + 3 ]=v362;break;end end end elseif (v362>=v90[v360 + 1 ]) then local v579=0;while true do if (v579==0) then v84=v92[3];v90[v360 + 3 ]=v362;break;end end end break;end if (v359==0) then v360=v92[2];v361=v90[v360 + 2 + 0 ];v359=1;end if (v359==1) then v362=v90[v360] + v361 ;v90[v360]=v362;v359=2;end end end elseif (v93>118) then local v363=0;local v364;while true do if (v363==0) then v364=v92[2];v90[v364](v21(v90,v364 + 1 ,v85));break;end end else v90[v92[2]]={};end elseif (v93<=121) then if (v93>(1175 -(87 + 968))) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else do return v90[v92[8 -6 ]];end end elseif (v93==122) then v90[v92[2]]=v75[v92[3]];else do return;end end v84=v84 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--
